# reasons you might want to use `environment.yaml` instead of `requirements.txt`:
# - pip installs packages in a loop, without ensuring dependencies across all packages
#   are fulfilled simultaneously, but conda achieves proper dependency control across
#   all packages
# - conda allows for installing packages without requiring certain compilers or
#   libraries to be available in the system, since it installs precompiled binaries

name: optimol

channels:
  - conda-forge
  - defaults

# it is strongly recommended to specify versions of packages installed through conda
# to avoid situation when version-unspecified packages install their latest major
# versions which can sometimes break things

# current approach below keeps the dependencies in the same major versions across all
# users, but allows for different minor and patch versions of packages where backwards
# compatibility is usually guaranteed

dependencies:
  - python=3.10
  - hydra-core=1.*
  - rich=13.*
  - pre-commit=3.*
  - rdkit
  - openbabel
  - pdbfixer
  # --------- loggers --------- #
  # - wandb
  # - neptune-client
  # - mlflow
  # - comet-ml
  # - aim>=3.16.2 # no lower than 3.16.2, see https://github.com/aimhubio/aim/issues/2550
  - pip
  - pip:
      - hydra-optuna-sweeper
      - hydra-colorlog
      - rootutils
      - datasets
      - torch_geometric==2.3.0
      - transformers
      - torch==2.3.0
      - --extra-index-url https://download.pytorch.org/whl/cu121
      - torchvision
      - torchaudio
      - lightning
      - torch_scatter
      - -f https://data.pyg.org/whl/torch-2.3.0+cu121.html
      - torch_sparse
      - -f https://data.pyg.org/whl/torch-2.3.0+cu121.html
      - torch_cluster
      - tensorboard
      - pandas
      - jupyterlab
      - scikit-learn
      - xgboost
      - biopython
      - pytest
      - torchmetrics
      - scipy
      - seaborn
      - numpy==1.23
      - openmm
      - pdbfixer
      - mols2grid
      - git+https://github.com/ashtawy/data_engine.git # make public
